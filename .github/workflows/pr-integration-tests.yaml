name: Integration Tests
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - "**"
  push:
    branches:
      - main
  merge_group:

jobs:
  integration-tests:
    name: "Integration Tests"
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       Check out repo
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      #----------------------------------------------
      #       Get docker compose
      #----------------------------------------------
      - name: Initialize Docker Compose
        uses: isbang/compose-action@v2.0.1
      #----------------------------------------------
      #       Get changed files
      #----------------------------------------------
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
      #----------------------------------------------
      #       Get changed plugins
      #----------------------------------------------
      - name: Get changed plugins
        id: changed-plugins
        run: |

          # Collects all the plugin names that have changes. 
          # If there is directory that isn't a plugin then it will need to skip it. Currently skipping plugin_globals
          declare -a changed_dirs=()
          for dir in ./*/; do
            current_folder=$(basename "$dir")
            if [[ $current_folder == "plugin_globals" ]]; then
              continue
            fi
            for changed_file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              if [[ $changed_file == *"$current_folder"* ]]; then
                if ! [[ ${changed_dirs[*]} =~ $current_folder ]]; then
                  changed_dirs+=("$current_folder")
                fi
              fi
            done
          done

          echo "changed-plugins=${changed_dirs[*]}" >> $GITHUB_OUTPUT

      #----------------------------------------------
      #       Run Integation Tests
      #----------------------------------------------
      - name: Run Integration Tests
        id: integration-tests
        run: |
          for dir in ${{ steps.changed-plugins.outputs.changed-plugins }}; do
            echo "Running integration tests for $dir"
            cd $dir/integration
            docker compose down --remove-orphans
            docker compose build
            docker compose run tests
            cd ../..
          done
